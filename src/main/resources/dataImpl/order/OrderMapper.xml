<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hotel.data.order.OrderMapper">

    <select id="getAllOrders" resultMap="Order">
        select * from OrderList
    </select>
    <select id="getUserOrders" resultMap="Order">
        select * from OrderList where userId=#{userid}
    </select>
    <insert id="addOrder" parameterType="com.example.hotel.po.Order" useGeneratedKeys="true" keyProperty="id">
        insert into OrderList(userId,hotelId,hotelName,checkInDate,checkOutDate,roomType,roomNum,peopleNum,haveChild,createDate,price,clientName,phoneNumber,orderState)
        values(#{userId},#{hotelId},#{hotelName},#{checkInDate},#{checkOutDate},#{roomType},#{roomNum},#{peopleNum},#{haveChild},#{createDate},#{price},#{clientName},#{phoneNumber},#{orderState})
    </insert>
    <select id="getOrderById" resultMap="Order">
        select * from OrderList where id=#{orderid}
    </select>
    <select id="getHotelOrders" resultMap="Order">
        select * from OrderList where hotelId=#{hotelId}
    </select>
    <select id="getHotelAbOrders" resultMap="Order">
        select * from OrderList where hotelId=#{hotelId} and orderState='未按时入住'
    </select>
   <!--撤销订单的数据库操作-->
    <update id="annulOrder" parameterType="com.example.hotel.po.Order">
        update orderlist set orderState='已撤销'
        where id=#{orderid}
    </update>


    <update id="checkIn">
        update orderlist set orderState='异常恢复'
        where id=#{id}
    </update>

    <update id="checkOut">
        update orderlist set orderState='已退房'
        where id=#{id}
    </update>

    <update id="updateOutTime">
        update orderlist set checkOutDate=#{checkOutDate},orderState='已入住'
        where id=#{id}
    </update>

    <update id="updateToday">
        update orderlist set orderState='未按时入住'
        where DATE(#{today}) > DATE(checkOutDate) and orderState='已预订'
    </update>

    <select id="getValue" resultMap="Order">
        select price from OrderList where id=#{id}
    </select>

    <select id="getUserId" resultMap="Order">
        select userId from OrderList where id=#{id}
    </select>

    <select id="getLateUserId" resultMap="userId">
        select userId from OrderList where (DATE(#{today}) > DATE(checkOutDate)) and orderState='已预订'
    </select>

    <select id="getLateCredit" resultMap="price">
        select price from OrderList where (DATE(#{today}) > DATE(checkOutDate)) and orderState='已预订'
    </select>

    <update id="updateCheckout">
        update orderlist set checkOutDate=#{checkOutDate},orderState='已入住'where id=#{id}
    </update>






    <resultMap id="userId" type="Integer">
        <result column="userId" property="userId"></result>
    </resultMap>

    <resultMap id="price" type="Double">
        <result column="price" property="price"></result>
    </resultMap>

    <resultMap id="Order" type="com.example.hotel.po.Order">
        <id column="id" property="id"></id>
        <result column="userId" property="userId"></result>
        <result column="hotelId" property="hotelId"></result>
        <result column="hotelName" property="hotelName"></result>
        <result column="checkInDate" property="checkInDate"></result>
        <result column="checkOutDate" property="checkOutDate"></result>
        <result column="roomType" property="roomType"></result>
        <result column="roomNum" property="roomNum"></result>
        <result column="peopleNum" property="peopleNum"></result>
        <result column="haveChild" property="haveChild"></result>
        <result column="createDate" property="createDate"></result>
        <result column="price" property="price"></result>
        <result column="clientName" property="clientName"></result>
        <result column="phoneNumber" property="phoneNumber"></result>
        <result column="orderState" property="orderState"></result>


    </resultMap>
</mapper>